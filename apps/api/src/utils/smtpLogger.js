const nodemailer = require('nodemailer');

exports.testConnection = async () => {
    try {
        console.log('üöÄ === TEST DE CONNEXION SMTP ===\n');

        if (!process.env.SMTP_HOST || !process.env.SMTP_MAIL || !process.env.SMTP_PASS) {
            throw new Error('Configuration SMTP incompl√®te');
        }

        const transporter = nodemailer.createTransport({
            host: process.env.SMTP_HOST,
            port: parseInt(process.env.SMTP_PORT) || 587,
            secure: process.env.SMTP_SECURE === 'true',
            auth: {
                user: process.env.SMTP_MAIL,
                pass: process.env.SMTP_PASS
            },
            // Timeout pour √©viter les blocages
            connectionTimeout: 10000,
            greetingTimeout: 10000,
            socketTimeout: 10000
        });

        console.log('üîÑ Test de connexion au serveur SMTP...');

        const verifyResult = await transporter.verify();
        console.log('‚úÖ Connexion SMTP r√©ussie!', verifyResult);

        return {
            success: true,
            result: verifyResult
        };
    } catch (error) {
        console.error('‚ùå Erreur de connexion SMTP:', error.message);

        // Diagnostic d√©taill√© selon le type d'erreur
        if (error.code === 'ECONNREFUSED') {
            console.log('üí° Conseil: Le serveur SMTP est inaccessible. V√©rifiez l\'h√¥te et le port.');
        } else if (error.code === 'EAUTH') {
            console.log('üí° Conseil: Erreur d\'authentification. V√©rifiez l\'email et le mot de passe.');
        } else if (error.code === 'ETIMEDOUT') {
            console.log('üí° Conseil: Timeout de connexion. V√©rifiez votre r√©seau.');
        }

        return {
            success: false,
            error: error.message
        };
    }
}