@import './variables';

$breakpoints: (
    'xs': 0,
    'sm': 576px,
    'md': 768px,
    'lg': 992px,
    'xl': 1200px,
    'xxl': 1400px) !default;

// Mixin pour les media queries above (min-width)
@mixin respond-above($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint-value: map-get($breakpoints, $breakpoint
        );

    @media (min-width: $breakpoint-value) {
        @content;
    }
}

@else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
}
}

// Mixin pour les media queries below (max-width)
@mixin respond-below($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @media (max-width: ($breakpoint-value - 1)) {
            @content;
        }
    }

    @else {
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

// Mixin pour les media queries between (min-width and max-width)
@mixin respond-between($lower, $upper) {
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
        $lower-breakpoint: map-get($breakpoints, $lower);
        $upper-breakpoint: map-get($breakpoints, $upper);

        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
            @content;
        }
    }

    @else {
        @warn 'Invalid breakpoints: #{$lower}, #{$upper}.';
    }
}

// Mixin pour le paysage (landscape)
@mixin landscape {
    @media (orientation: landscape) {
        @content;
    }
}

// Mixin pour le portrait (portrait)
@mixin portrait {
    @media (orientation: portrait) {
        @content;
    }
}

// Mixin pour les appareils à haut DPI (Retina)
@mixin retina {

    @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
        @content;
    }
}

// _mixins.scss (version alternative)

// Mixins simplifiés avec des valeurs directes
@mixin respond-above-sm {
    @media (min-width: 576px) {
        @content;
    }
}

@mixin respond-above-md {
    @media (min-width: 768px) {
        @content;
    }
}

@mixin respond-above-lg {
    @media (min-width: 992px) {
        @content;
    }
}

@mixin respond-above-xl {
    @media (min-width: 1200px) {
        @content;
    }
}

@mixin respond-below-sm {
    @media (max-width: 575px) {
        @content;
    }
}

@mixin respond-below-md {
    @media (max-width: 767px) {
        @content;
    }
}

@mixin respond-below-lg {
    @media (max-width: 991px) {
        @content;
    }
}

@mixin respond-below-xl {
    @media (max-width: 1199px) {
        @content;
    }
}

@mixin respond-between($min, $max) {
    @media (min-width: $min) and (max-width: $max) {
        @content;
    }
}

@mixin mobile-only {
    @media (max-width: #{$breakpoint-md - 1px}) {
        @content;
    }
}

@mixin tablet-up {
    @media (min-width: #{$breakpoint-md}) {
        @content;
    }
}

@mixin desktop-up {
    @media (min-width: #{$breakpoint-lg}) {
        @content;
    }
}

@mixin large-desktop-up {
    @media (min-width: #{$breakpoint-xl}) {
        @content;
    }
}

// Gestion du hover, focus, etc. pour le desktop uniquement (évite les soucis sur mobile)
@mixin hover {
    @media (hover: hover) {
        &:hover {
            @content;
        }
    }
}

@mixin focus {
    &:focus {
        @content;
    }
}

@mixin focus-visible {
    &:focus-visible {
        outline: 2px solid $color-primary;
        outline-offset: 2px;
        @content;
    }
}

// Reset de liste
@mixin list-reset {
    list-style: none;
    margin: 0;
    padding: 0;
}

@mixin visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Truncate du texte sur une seule ligne avec des points de suspension
@mixin truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin line-clamp($lines) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

// Placement absolu au centre
@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Placement absolu horizontalement
@mixin absolute-center-x {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
}

// Placement absolu verticalement
@mixin absolute-center-y {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}

// Style de bouton de base réutilisable
@mixin button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: $spacing-xs;
    padding: $spacing-sm $spacing-md;
    font-family: inherit;
    font-size: $font-size-base;
    font-weight: $font-weight-medium;
    line-height: $line-height-base;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    border: 1px solid transparent;
    border-radius: $border-radius;
    transition: all $transition-duration-fast ease-in-out;

    &:disabled {
        cursor: not-allowed;
        opacity: 0.6;
    }
}

// Variantes de bouton
@mixin button-variant($background, $color, $border: $background) {
    background-color: $background;
    color: $color;
    border-color: $border;

    @include hover {
        background-color: darken($background, 10%);
        border-color: darken($border, 10%);
    }

    &:focus {
        outline: none;
        box-shadow: 0 0 0 0.2rem rgba($background, 0.5);
    }
}

@mixin transition($properties: all, $duration: 0.3s, $timing: ease-in-out) {
    transition: $properties $duration $timing;
}

@mixin card-shadow($level: 1) {
    @if $level ==1 {
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    }

    @else if $level ==2 {
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    @else if $level ==3 {
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    @else if $level ==4 {
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
}

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-column {
    display: flex;
    align-items: center;
    flex-direction: column;
}

@mixin glass-effect {
    background: rgba($white, 0.95);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba($white, 0.2);
}

@mixin input-focus {
    outline: none;
    border-color: $two;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
}